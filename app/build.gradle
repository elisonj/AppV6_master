apply plugin: 'com.android.application'

def keystoreProperties = new Properties()
keystoreProperties.setProperty('storePassword', '')
keystoreProperties.setProperty('keyPassword', '')
keystoreProperties.setProperty('keyAlias', '')
keystoreProperties.setProperty('storeFile', '.')

if (rootProject.file('keystore.properties').exists()) {
    def keystorePropertiesFile = rootProject.file('keystore.properties')
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'
    defaultConfig {
        applicationId 'br.com.bg7.appvistoria'
        minSdkVersion 25
        targetSdkVersion 26
        versionCode 3
        versionName '0.2.2'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        // Build config fields
        buildConfigField 'String', 'GRANT_TYPE', '"password"'
        buildConfigField 'String', 'CLIENT_ID', '"61922-5b5d19794c749cfbc5d20becc3826e08-s4b-cda-app"'
        buildConfigField 'String[]', 'LANGUAGE_NAMES', '{ "pt", "en" }'
        buildConfigField 'String', 'BASE_URL', '"https://preapi.s4bdigital.net"'

        buildConfigField 'String', 'DATABASE_NAME', '"mobileassetinspection.db"'
        buildConfigField 'Integer', 'DATABASE_VERSION', '1'
    }
    signingConfigs {
        signing {
            storePassword keystoreProperties['storePassword']
            keyPassword keystoreProperties['keyPassword']
            keyAlias keystoreProperties['keyAlias']
            storeFile file(keystoreProperties['storeFile'])
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signing
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.support:design:26.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.47'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'org.slf4j:slf4j-api:1.7.25'
    // TODO: Usar slf4j-simple apenas quando for teste. Sen√£o, usar slf4j-android
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile group: 'com.j256.ormlite', name: 'ormlite-core', version: '5.0'
    compile group: 'com.j256.ormlite', name: 'ormlite-android', version: '5.0'
    compile group: 'joda-time', name: 'joda-time', version: '2.3'
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'
    compile group: 'com.google.guava', name: 'guava', version: '22.0-android'
    compile 'com.akexorcist:localizationactivity:1.1.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
}
